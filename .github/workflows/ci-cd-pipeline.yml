name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application
        run: dotnet build --configuration Release --no-restore

  docker-build-push:
    name: Build & Push Docker Image
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t vuyisile28/mvc-movie:wv2 -f Dockerfile .

      - name: Push Docker Image to Docker Hub
        run: docker push vuyisile28/mvc-movie:wv2

  deploy:
    name: Deploy to Minikube
    needs: docker-build-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Start Minikube
        run: |
          minikube start
          kubectl config use-context minikube

      - name: Create Secret in Kubernetes
        run: |
          kubectl create secret generic sqlserver-secret \
            --from-literal=PROD_DB_USER=sa \
            --from-literal=PROD_DB_PASSWORD=${{ secrets.MVC_MOVIE_DB_PASSWORD }}
      
      - name: Apply ConfigMap
        run: kubectl apply -f configmap.yaml

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f sqlserver-deployment.yaml
          kubectl apply -f mvc-movie-deployment.yaml
          kubectl rollout status deployment/mvc-movie
