apiVersion: apps/v1
kind: Deployment
metadata:
  name: mvc-movie
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mvc-movie
  template:
    metadata:
      labels:
        app: mvc-movie
    spec:
      initContainers:  # <-- This waits for SQL Server before running the app
      - name: wait-for-sqlserver
        image: busybox
        command: ['sh', '-c', "until nc -z sqlserver 1433; do echo waiting for database; sleep 5; done;"]
      
      
      containers:
      - name: mvc-movie
        image: vuyisile28/mvc-movie:wv2
        ports:
          - containerPort: 80
        env:
          - name: PROD_DB_SERVER
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: PROD_DB_SERVER
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: app-config
                key: DB_NAME
          - name: PROD_DB_USER
            valueFrom:
              secretKeyRef:
                name: sqlserver-secret
                key: PROD_DB_USER
          - name: PROD_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sqlserver-secret
                key: PROD_DB_PASSWORD          

        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 10  # Wait 10 sec before checking health
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15  # Wait 15 sec before accepting traffic
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mvc-movie-service
spec:
  type: NodePort
  selector:
    app: mvc-movie
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30008  # Expose app on Minikube at port 30008
